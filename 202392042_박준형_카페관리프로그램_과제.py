# -*- coding: utf-8 -*-
"""202392042_박준형_카페관리프로그램_과제.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A57dBmL6RmmavOGUe4uEl3xMPhHtZFU6
"""

# 메뉴 및 가격 설정
menu = {
    1: ("아메리카노", 1000),
    2: ("에스프레소", 1000),
    3: ("카페라떼", 1500),
    4: ("바닐라레떼", 1500),
    5: ("카페모카", 2000),
    6: ("달고나라떼", 2500),
}

# 주문 정보 초기화
current_order = []
total_price = 0

# 주문 함수
def place_order():
    global current_order, total_price
    print("메뉴를 선택하세요:")
    print("+-----------------------------[메뉴]----------------------------+")
    for key, (item, price) in menu.items():
        print(f"{key}. {item} / {price}원")
    print("7. 주문다시(reset)   8. 주문종료(exit)")
    while True:
        try:
            choice = int(input("선택(번호를 입력하세요): "))
            if choice in menu:
                current_order.append(menu[choice][0])
                total_price += menu[choice][1]
                print(f"{menu[choice][0]}이(가) 주문되었습니다.")
            elif choice == 7:
                current_order = []
                total_price = 0
                print("주문이 초기화되었습니다.")
            elif choice == 8:
                return
            else:
                print("잘못된 선택입니다. 다시 시도하세요.")
        except ValueError:
            print("올바른 번호를 입력하세요.")

# 투입금액 함수
def input_money():
    while True:
        try:
            money = int(input("투입 금액을 입력하세요: "))
            if money >= total_price:
                return money
            else:
                print("금액이 모자랍니다. 추가 금액을 입력하세요.")
        except ValueError:
            print("올바른 금액을 입력하세요.")

# 잔돈 계산 함수
def calculate_change(total_price, money):
    return money - total_price

# 프로그램 실행
while True:
    place_order()
    if not current_order:
        print("주문이 초기화되었습니다.")
        continue
    print(f"주문내용: {', '.join(current_order)}")
    print(f"총 금액: {total_price}원")
    money_inserted = input_money()
    change = calculate_change(total_price, money_inserted)
    print(f"거스름돈: {change}원")
    if change < 0:
        additional_payment = abs(change)
        while additional_payment > 0:
            try:
                more_money = int(input(f"추가 {additional_payment}원을 투입하세요: "))
                additional_payment -= more_money
            except ValueError:
                print("올바른 금액을 입력하세요.")
    current_order = []
    total_price = 0
    continue_order = input("추가 주문하시겠습니까? (예/아니오): ")
    if continue_order.lower() != "예":
        break

print("주문을 종료합니다. 잔액을 반환합니다.")
8