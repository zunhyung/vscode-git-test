# -*- coding: utf-8 -*-
"""Untitled60.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CZKChUrxvlbctzgg4lPdbiM2FcUGJOwu
"""

import tkinter as tk  # Tkinter 모듈을 tk로 가져오기
import random

# 요일, 교수, 과목 등의 데이터 정의
days = ['월', '화', '수', '목', '금']
professors = ['이근호', '민정익', '김철수', '스캇', '짱구']
subjects = ['인공지능 수학기초', '영상이해', '인공지능기초와활용', '생활영어회화', '소프트웨어적 사고']
professor_subjects = {'이근호': '인공지능기초와활용', '민정익': '인공지능 수학기초',
                      '김철수': '영상이해', '스캇': '생활영어회화', '짱구': '소프트웨어적 사고'}

def generate_timetable():
    # 빈 시간표 초기화
    timetable = [['' for _ in range(5)] for _ in range(6)]

    for day_index, day in enumerate(days):
        for period in range(5):
            subject = random.choice(subjects)
            professor = get_professor(subject)

            # 해당 교수의 수업이 가능한지 확인하고 시간표에 추가
            if professor and check_availability(timetable, day_index, professor):
                timetable[period][day_index] = f'{subject}\n({professor})'

    return timetable

def get_professor(subject):
    # 과목에 해당하는 교수 찾기
    for prof, sub in professor_subjects.items():
        if sub == subject:
            return prof
    return None

def check_availability(timetable, day_index, professor):
    # 해당 교수가 이미 최대 수업을 강의하지 않았는지와 해당 요일에 이미 수업이 없는지 확인
    return (
        all(row.count(professor) < 3 for row in timetable[:5]) and
        timetable[day_index].count(professor) == 0
    )

def has_too_many_classes(timetable):
    # 하루에 3개 이상의 수업이 있는 경우 False 반환
    return any(row.count(prof) >= 3 for prof in professors for row in timetable[:5])

def print_timetable(timetable):
    # 시간표 출력
    for row in timetable:
        print(row)

def show_timetable(timetable):
    # Tkinter를 사용하여 GUI로 시간표 표시
    root = tk.Tk()
    root.title('Generated Timetable')

    for i in range(6):
        for j in range(5):
            tk.Label(root, text=timetable[i][j], borderwidth=1, relief="solid", width=15, height=3).grid(row=i, column=j)

    root.mainloop()

if __name__ == '__main__':
    # 시간표 생성 및 출력
    timetable_result = generate_timetable()

    # 하루에 3개 이상의 수업이 있는지 확인
    if has_too_many_classes(timetable_result):
        print("하루에 3개 이상의 수업이 존재합니다. False 반환")
    else:
        print_timetable(timetable_result)
        show_timetable(timetable_result)